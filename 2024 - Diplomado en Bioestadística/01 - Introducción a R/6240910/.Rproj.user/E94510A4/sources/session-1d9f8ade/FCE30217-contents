# HOUSEKEEPING ------------------------------------------------------------
date() # Current system time and date.
R.version.string # R version and version release date.
options(digits=6) # Confirm default digits.
options(scipen=999)# Suppress scientific notation.
options(width=60) # Confirm output width.
ls() # List all objects in the working directory.
rm(list = ls()) # CAUTION: Remove all files in the
ls.str() # List all objects with finite detail.
getwd() # Identify the current working directory.
setwd("C:/Users/juand/iCloudDrive/Work/Research/2020 - Intento de Suicidio HSLV 2019") #Copy & Paste the 
getwd() # Confirm the working directory.
load("C:/Users/juand/iCloudDrive/Work/Research/2020 - Intento de Suicidio HSLV 2019/IntentodeSuicidioHSLV2019.RDATA")
list.files() # List files at the PC directory.
.libPaths() # Library pathname.
.Library # Library pathname.
sessionInfo() # R version, locale, and packages.
search() # Attached packages and objects.
searchpaths() # Attached packages and objects.sto
par("mar") # Confirm default margin (BLTR)
par(mar = c(5.1, 4.1, 4.1, 2.1)) #adjust plot margins

####### OPEN DATASET % MAKE IT READEABLE #######
dat.df <- utils::read.table (file =
                               "INTSUIDATASET.csv",
                             header=TRUE, dec=".", sep=",")
getwd() # Identify the working directory
ls() # List objects
attach(dat.df) # Attach the data, for later use

# INSTALL LIBRARIES -------------------------------------------------------
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse) # Load the arsenal package.
help(package=tidyverse) # Show the information page.
sessionInfo() # Confirm all attached packages.
install.packages("dplyr", dependencies = TRUE)
install.packages("effsize", dependencies = TRUE)
install.packages("Hmisc", dependencies = TRUE)
install.packages("gtsummary", dependencies = TRUE)
install.packages("lubridate", dependencies = TRUE)
install.packages("RcmdrMisc", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggthemes", dependencies = TRUE)
install.packages("ggmosaic", dependencies = TRUE)
install.packages("gridExtra", dependencies = TRUE)
install.packages("grid", dependencies = TRUE)
install.packages("scales", dependencies = TRUE)
install.packages("waffle", dependencies=TRUE)
install.packages("nortest", dependencies=TRUE)
install.packages("UsingR", dependencies=TRUE)
install.packages("RVAideMemoire", dependencies=TRUE)
install.packages("furniture", dependencies=TRUE)
install.packages("pastecs", dependencies=TRUE)
install.packages("tables", dependencies=TRUE)
install.packages("doBy", dependencies=TRUE)
install.packages("psych", dependencies=TRUE)
install.packages("epiDisplay", dependencies=TRUE)
install.packages("asbio", dependencies=TRUE)
install.packages("s20x", dependencies=TRUE)
install.packages("arsenal", dependencies=TRUE)
install.packages("pivottabler", dependencies=TRUE)

# OPEN LIBRARIES ####
library(asbio)
library(tidyverse)
library(dplyr)
library(effsize)
library(Hmisc)
library(pivottabler)
library(arsenal)
library(s20x)
library(lattice)
library(effsize)
library(epiDisplay)
library(psych)
library(doBy)
library(tables)
library(pastecs)
library(furniture)
library(RVAideMemoire)
library(UsingR)
library(nortest)
library(waffle)
library(scales)
library(grid)
library(gridExtra)
library(ggmosaic)
library(ggthemes)
library(ggplot2)
library(gtsummary)
library(lubridate)
library(RcmdrMisc)

# REVIEW OF THE DATA FRAME ------------------------------------------------
view(dat.df) # To wacht on screen the dataset
class(dat.df) #class of dat.df object.
glimpse(dat.df) # Same as above, but better printed.
head(dat.df, n=3) # Show the head, 1st 3 cases #Standard is 6
tail(dat.df, n=3) # Show the head, 1st 3 cases #Standard is 6
dat.df #To see de 1st 30 values of each variable
summary(dat.df) # Summary statistics

# # # # # # # # # # # # # # # # # # # # # # # # # # # #
#               CODE BOOK FOR dat.df               ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                     #
# Sexo ............................. Factor (nominal) #
#                                      Sexo biológica #
#                                                     #
# Edad ........................... Double (Continuos) #
#                                        Edad en años #
#                                                     #
# Etnia .....................Factor (e.g., nominal) #
# AM (Morning) or PM (Afternoon) class #
# #
# Lbs ...................... Numeric (e.g., interval) #
# Weight (Lbs) of Grade 12 students, most are #
# 17 to 18 years #
# #
# Gender ......................Factor (e.g., nominal) #
# Female and Male #
# # # # # # # # # # # # # # # # # # # # # # # # # # # #

# DATA CLEANING AND MISSING VALUES ----------------------------------------
glimpse(dat.df) # I believe it´s better than str
str(dat.df) # base R function
library(Hmisc)
describe(dat.df) # detailed summaries of variables
describe(dat.df[,c( "Sexo", "Edad", "Etnia")]) # Explore 1 by 1 if needed
plot(describe(dat.df), which = "categorical")
plot(describe(dat.df), which = "continuous")
hist(dat.df$Edad, breaks = 50) # histogram of Edad with a suspicious extreme value
hist(dat.df$NumeroIntentosPrevios, breaks = 5) # histogram of Estancia Hospitalaria with a suspicious extreme value

## Missing Values ####
describe(dat.df) # detailed summaries of variables
dat.df$Etnia[dat.df$Etnia == ""] <- NA # 1 by 1, or
dat.df[dat.df == ""] <- NA #all At once
view(dat.df) # Confirm

dat.dfse[dat.dfse == NA] <- "" #all At once
view(dat.dfse) # Confirm

## Changing Names of Variables ####
names(dat.df)[names(dat.df) == "SEXO"] <- "Sexo"
names(dat.df)[names(dat.df) == "EDAD"] <- "Edad"
names(dat.df)[names(dat.df) == "PROCEDENCIA"] <- "Procedencia"
names(dat.df)[names(dat.df) == "CIVIL"] <- "Estado Civil"

## Correcting misspelling ####
# Change categories
describe(Ocupacion)
unique(dat.df$Ocupacion) # Seek 
dat.df$Ocupacion[dat.df$Ocupacion== "ABOGADA"] <- "ABOGADO" # and Correct
dat.df$Ocupacion[dat.df$Ocupacion== "EMPLEADA DEL SERVICIO"] <- "EMPLEADO DOMÉSTICO"
dat.df$Ocupacion[dat.df$Ocupacion== "PROMOTORA DE VIAJES"] <- "PROMOTOR DE VIAJES"
dat.df$Ocupacion[dat.df$Ocupacion== "PSICÓLOGA"] <- "PSICÓLOGO"
dat.df$Ocupacion[dat.df$Ocupacion== "REPARTIDOR"] <- "DOMICILIARIO"
dat.df$Ocupacion[dat.df$Ocupacion== "TRABAJADORA SEXUAL"] <- "TRABAJADOR SEXUAL"
dat.df$Ocupacion[dat.df$Ocupacion== "ADMINISTRADOR"] <- "ADMINISTRADOR PÚBLICO"
dat.df$Ocupacion[dat.df$Ocupacion== "MESERA"] <- "MESERO"
unique(dat.df$Ocupacion) # Confirm 

dat.df$Escolaridad[dat.df$Escolaridad== "BASICA PRIMARIA"] <- "BÁSICA PRIMARIA"
unique(dat.df$Escolaridad) # Confirm 

describe(EnfermedadMental)
unique(dat.df$EnfermedadMental) # Seek 
dat.df$EnfermedadMental[dat.df$EnfermedadMental== "Trastorno psicótico"] <- "Esquizofrenia paranoide" # and Correct
dat.df$EnfermedadMental[dat.df$EnfermedadMental== "Esquizofrenia paranoide y epilepsia"] <- "Esquizofrenia paranoide" # and Correct
dat.df$EnfermedadMental[dat.df$EnfermedadMental== "Ansiedad y depresión"] <- "Ansiedad" # and Correct
dat.df$EnfermedadMental[dat.df$EnfermedadMental== "Ansiedad y pánico"] <- "Ansiedad" # and Correct

dat.df$EnfermedadMental[dat.df$EnfermedadMental== "Trastorno mixto de conducta"] <- "Trastorno de la conducta" # and Correct

describe(EnfermedadFisica)
unique(dat.df$EnfermedadFisica) # Seek 
dat.df$EnfermedadFisica[dat.df$EnfermedadFisica== "Sindrome convulsivo "] <- "Epilepsia" # and Correct
dat.df$EnfermedadFisica[dat.df$EnfermedadFisica== "Vih"] <- "VIH" # and Correct

dat.dfse[dat.dfse== "NA"] <- "Sin Información"

## Lowercase, Upper Case, Sentence Case & Title Case ####
dat.df$Ocupacion <- str_to_sentence(Ocupacion)
dat.df$Escolaridad <- str_to_sentence(Escolaridad)
dat.df$EnfermedadFisica <- str_to_sentence(EnfermedadFisica)
dat.df$EnfermedadMental <- str_to_sentence(EnfermedadMental)

## Now colored by missing values ####
plot(describe(dat.df))
plot(describe(dat.df), which = "categorical")
plot(describe(dat.df), which = "continuous") + scale_color_gradient(low="blue", high="red") # scale_color_gradient() changes the colors used to denote missing

## Look which cases are complete ####
complete.cases(dat.df) #returns a logical vector of whether each row of x has no missing (TRUE) or at least one NA (FALSE).
sum(complete.cases(dat.df)) # number of complete cases
datcc.df <- dat.df[complete.cases(dat.df),] # create a dataset of complete cases

sum(complete.cases(dat.df$Sexo)) # number of complete cases
sum(complete.cases(dat.df$Procedencia)) # number of complete cases
sum(complete.cases(dat.df$TieneEnfermedadFisica)) # number of complete cases
sum(complete.cases(dat.df$TieneEnfermedadMental)) # number of complete cases
sum(complete.cases(dat.df$IntentosPrevios)) # number of complete cases
sum(complete.cases(dat.df$Lugar)) # number of complete cases
sum(complete.cases(dat.df$Premeditacion)) # number of complete cases
sum(complete.cases(dat.df$Planificacion)) # number of complete cases
sum(complete.cases(dat.df$GestosDespedida)) # number of complete cases
sum(complete.cases(dat.df$DeterminacionRiesgo)) # number of complete cases
sum(complete.cases(dat.df$Riesgo)) # number of complete cases
sum(complete.cases(dat.df$AltaMismoDia)) # number of complete cases
sum(complete.cases(dat.df$AltaVoluntaria)) # number of complete cases
sum(complete.cases(dat.df$Hospitalizacion)) # number of complete cases
sum(complete.cases(dat.df$FueRemitido)) # number of complete cases
sum(complete.cases(dat.df$Subregistro)) # number of complete cases


dat.dfse <- dat.dfse[ , -32] #this is to remove variables from a ds
complete.cases(dat.dfse) #returns a logical vector of whether each row of x has no missing (TRUE) or at least one NA (FALSE).
sum(complete.cases(dat.dfse)) # number of complete cases

## Create Datasets with complete info ####
CRiesgo <- dat.df[complete.cases(dat.df$Riesgo), ] 

CIntentosPrevios <- dat.df[complete.cases(dat.df$IntentosPrevios), ]
CPlanificacion <- dat.df[complete.cases(dat.df$Planificacion), ]
CPremeditacion <- dat.df[complete.cases(dat.df$Premeditacion), ]
CGestosDespedida <- dat.df[complete.cases(dat.df$GestosDespedida), ]
CRiesgo <- dat.df[complete.cases(dat.df$Riesgo), ]

## Create crossed datasets with complete info ####
Riesgo x Intentos Previos
Riesgo x Tiene Enfermedad Mental
Riesgo x Premeditación
Riesgo x Planificación
Persistencia Ideación x Intentos Previos

RxIP.df <- dat.df[complete.cases(dat.df$Riesgo, dat.df$IntentosPrevios), ]
RxTEM.df <- dat.df[comdplete.cases(dat.df$Riesgo, dat.df$TieneEnfermedadMental), ]
RxPre.df <- dat.df[complete.cases(dat.df$Riesgo, dat.df$Premeditacion), ]
RxPLa.df <- dat.df[complete.cases(dat.df$Riesgo, dat.df$Planificacion), ]
PIxIP.df <- dat.df[complete.cases(dat.df$PersistenciaIdeacion, dat.df$IntentosPrevios), ]

help(complete.cases)
# FACTORS -----------------------------------------------------------------
glimpse(dat.df) # Explore how many and which character vectors there are
dat.df$Ocupacion # Example of character vector

dat.df$Ocupacion_fct <- factor(dat.df$Ocupacion) # convert single to factor
dat.df$Ocupacion_fct # categories in alphabetical order

#### Convert all character to Factors ####
dat.df[sapply(dat.df, is.character)] <- lapply(dat.df[sapply(dat.df, is.character)], as.factor)
glimpse(dat.df) # Confirm

#### specifying the order of levels ####
glimpse(dat.df) # Explore
unique(dat.df$Estrato) # See uniqueness
dat.df$Estrato <- factor(dat.df$Estrato, levels = c("Uno","Dos", "Tres", "Cuatro"))
dat.df$Estrato # See Distributions and Levels
as.numeric(dat.df$Estrato) # See underlying integer values 

glimpse(dat.df) # Explore
unique(dat.df$Escolaridad) # See uniqueness
dat.df$Escolaridad <- factor(dat.df$Escolaridad, levels = c("Ninguno", "Preescolar", "Básica primaria", "Básica secundaria", "Media", "Técnico profesional", "Tecnológico", "Profesional"))
dat.df$Escolaridad # See Distributions and Levels
as.numeric(dat.df$Escolaridad) # See underlying integer values 

glimpse(dat.df) # Explore
unique(dat.df$Dia) # See uniqueness
dat.df$Dia <- factor(dat.df$Dia, levels = c("Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"))
dat.df$Dia # See Distributions and Levels
as.numeric(dat.df$Dia) # See underlying integer values 

glimpse(dat.df) # Explore
unique(dat.df$Mes) # See uniqueness
dat.df$Mes <- factor(dat.df$Mes, levels = c("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"))
dat.df$Mes # See Distributions and Levels
as.numeric(dat.df$Mes) # See underlying integer values 

# NUMBERS -----------------------------------------------------------------
glimpse(dat.df)

#### Convert all integers (int) to numerics (dbl) ####
dat.df[sapply(dat.df, is.integer)] <- lapply(dat.df[sapply(dat.df, is.integer)], as.numeric)
glimpse(dat.df) # Confirm

### # Confirm that the number associated with dat.df$Edad are numeric.####
dat.df$Edad <-as.numeric(dat.df$Edad)
length(dat.df$Edad)
table(is.na(dat.df$Edad))

# 1ST VISUALIZATION OF DATA ---------------------------------------------
getwd() # Identify the working directory
ls() # List objects
attach(dat.df) # Attach the data, for later use
class(dat.df) # Class
glimpse(dat.df) # Identify structure
nrow(dat.df) # List the number of rows
ncol(dat.df) # List the number of columns
dim(dat.df) # Dimensions of the data frame
names(dat.df) # Identify names
colnames(dat.df) # Show column names
rownames(dat.df) # Show row names
head(dat.df) # Show the head
tail(dat.df) # Show the tail
dat.df # Show the entire dataframe
summary(dat.df) # Summary statistics
Hmisc::describe(dat.df)


# CODEBOOK ----------------------------------------------------------------
#                                                     #
# Sexo ........................ Factor (e.g., nominal)#
#                                 Masculino o femenino#
#                                                     #
# Edad ...................... Numeric (e.g., Discrete)#
#                                              En años#
#                                                     #
# Etnia ........................Factor (e.g., nominal)#
#                      Indígena, blanco, mestizo, afro#
#                                                     #
# Estado Civil................  Factor (e.g., nominal)#
#                         Soltero, Unión libre, casado#
#                                                     #                                                     #
# Numero de intentos Previos.Numeric (e.g., Discrete) #
#           Intentos de Suicidio previos a este evento#


# EXPLORATION OF NUMERIC (dbl) DATA ---------------------------------------
glimpse(dat.df)

#### Simple Visual Data Check Using Graphics (Numeric) ####
par(ask=TRUE)
plot(density(dat.df$Edad, na.rm=TRUE),
     main="Edad (Años) de los casos de Intentos de Suicidio
     Hospital Susana López de Valencia, 2019",
     col="red", lwd=5)

par(ask=TRUE)
plot(density(dat.df$NumeroIntentosPrevios, na.rm=TRUE),
     main="Número de Intentos Previos  de los casos de Intentos de Suicidio
     Hospital Susana López de Valencia, 2019",
     col="blue", lwd=5)

par(ask=TRUE)
plot(density(dat.df$EstanciaHospitalaria, na.rm=TRUE),
     main="Estancia Hospitalaria de los casos de Intentos de Suicidio
     Hospital Susana López de Valencia, 2019",
     col="green", lwd=5)

#### Complex Visual Data Check Using Graphics (Numeric) ####
par(ask=TRUE) # VISUAL DATA CHECK OF AGE
par(mfrow=c(2,3)) # 6 figures into a 2 row by 3 column grid
hist(dat.df$Edad, main="Edad (Años): Histogram")
plot(dat.df$Edad, main="Edad (Años): Plot")
plot(density(dat.df$Edad, na.rm=TRUE), # na.rm=TRUE
     main="Edad (Años): Density Plot") # missing data
boxplot(dat.df$Edad,
        main="Edad (Años): Box Plot")
stripchart(dat.df$Edad,
           main="Edad (Años): Stripchart") # Stripchart
qqnorm(dat.df$Edad, main="Edad (Años): Q-Q Plot")

par(ask=TRUE) # VISUAL DATA CHECK OF PREVIOUS ATTEMPS
par(mfrow=c(2,3)) # 6 figures into a 2 row by 3 column grid
hist(dat.df$NumeroIntentosPrevios, main="Intentos Previos: Histogram")
plot(dat.df$NumeroIntentosPrevios, main="Intentos Previos: Plot")
plot(density(dat.df$NumeroIntentosPrevios, na.rm=TRUE), # na.rm=TRUE
     main="Intentos Previos: Density Plot") # missing data
boxplot(dat.df$NumeroIntentosPrevios,
        main="Intentos Previos: Box Plot")
stripchart(dat.df$NumeroIntentosPrevios,
           main="Intentos Previos: Stripchart") # Stripchart
qqnorm(dat.df$NumeroIntentosPrevios, main="Intentos Previos: Q-Q Plot")

par(ask=TRUE) # VISUAL DATA CHECK OF DAYS HOSPITALIZED
par(mfrow=c(2,3)) # 6 figures into a 2 row by 3 column grid
hist(dat.df$EstanciaHospitalaria, main="Estancia Hospitalaria 
     (Días): Histogram")
plot(dat.df$EstanciaHospitalaria, main="Estancia Hospitalaria 
     (Días): Plot")
plot(density(dat.df$EstanciaHospitalaria, na.rm=TRUE), # na.rm=TRUE
     main="Estancia Hospitalaria 
     (Días): Density Plot") # missing data
boxplot(dat.df$EstanciaHospitalaria,
        main="Estancia Hospitalaria
        (Días): Box Plot")
stripchart(dat.df$EstanciaHospitalaria,
           main="Estancia Hospitalaria 
           (Días): Stripchart") # Stripchart
qqnorm(dat.df$NumeroIntentosPrevios, main="Estancia Hospitalaria 
       (Días): Q-Q Plot")

####### EXPLORATION OF CATEGORICAL (fct) DATA #######
glimpse(dat.df)

#### Simple Visual Data Check Using Graphics (Categorical) ####
par(ask=TRUE) # VISUAL DATA CHECK OF SOCIODEMOGRAPHIC CHARACTERISTICS
par(mfrow=c(2,4)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$Sexo),
        main="Género: Barplot Frequency Distribution",
        col=c("blue", "red"), ylim=c(0,120)) # Alter color - Y scale
barplot(table(dat.df$Etnia),
        main="Edad: Barplot Frequency Distribution",
        col=c("blue", "red"), ylim=c(0,10)) # Alter color - Y scale
barplot(table(dat.df$EstadoCivil),
        main="Estado Civil: Barplot Frequency Distribution",
        col=c("green", "red"), ylim=c(0,140)) # Alter color - Y scale
barplot(table(dat.df$Ocupacion),
        main="Ocupacion: Barplot Frequency Distribution",
        col=c("green", "red"), ylim=c(0,100)) # Alter color - Y scale
barplot(table(dat.df$Procedencia),
        main="Procedencia: Barplot Frequency Distribution",
        col=c("green", "Blue"), ylim=c(0,120)) # Alter color - Y scale
barplot(table(dat.df$Estrato),
        main="Estrato: Barplot Frequency Distribution",
        col=c("green", "red"), ylim=c(0,120)) # Alter color - Y scale
barplot(table(dat.df$Escolaridad),
        main="Escolaridad: Barplot Frequency Distribution",
        col=c("blue", "red"), ylim=c(0,80)) # Alter color - Y scale

par(ask=TRUE) # VISUAL DATA CHECK OF CLINICAL CHARACTERISTICS
par(mfrow=c(2,3)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$TieneEnfermedadFisica),
        main="Tiene Enfermedad Fisica: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$EnfermedadFisica),
        main="Enfermedad Física: Barplot Frequency Distribution",
        col=c("gray", "white"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$TieneEnfermedadMental),
        main="Tiene Enfermedad Mental: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$EnfermedadMental),
        main="Enfermedad Mental: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$IntentosPrevios),
        main="Intentos Previos: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,100)) # Alter color - Y scale

par(ask=TRUE) # VISUAL DATA CHECK OF THE EVENT´S CIRCUMSTANCE
par(mfrow=c(2,3)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$Dia),
        main="Día: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,30)) # Alter color - Y scale
barplot(table(dat.df$Mes),
        main="Mes: Barplot Frequency Distribution",
        col=c("gray", "white"), ylim=c(0,30)) # Alter color - Y scale
barplot(table(dat.df$Lugar),
        main="Lugar: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,160)) # Alter color - Y scale
barplot(table(dat.df$Metodo),
        main="Método: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,70)) # Alter color - Y scale

par(ask=TRUE) # VISUAL DATA CHECK OF THE EVENT
par(mfrow=c(2,3)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$Motivos),
        main="Motivos: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,60)) # Alter color - Y scale
barplot(table(dat.df$Premeditacion),
        main="Premeditación: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,95)) # Alter color - Y scale
barplot(table(dat.df$Planificacion),
        main="Planificación: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$GestosDespedida),
        main="Gestos de Despedida: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale

par(ask=TRUE) # VISUAL DATA CHECK OF CLINICAL ATTENTION
par(mfrow=c(2,3)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$DeterminacionRiesgo),
        main="Se Determinó el Riesgo: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,100)) # Alter color - Y scale
barplot(table(dat.df$Riesgo),
        main="Riesgo: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,70)) # Alter color - Y scale
barplot(table(dat.df$AltaMismoDia),
        main="El Paciente Fue Egresado el Mismo Día: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$AltaVoluntaria),
        main="El Paciente Solicitó Alta Voluntaria: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale

par(ask=TRUE) # VISUAL DATA CHECK OF POST-CLINICAL ATTENTION
par(mfrow=c(2,3)) # 2 figures into a 1 row by 2 column grid
barplot(table(dat.df$Hospitalizacion),
        main="El Paciente fue Hospitalizado: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,120)) # Alter color - Y scale
barplot(table(dat.df$PersistenciaIdeacion),
        main="Hubo Persistencia de la Ideación Suicidia: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,120)) # Alter color - Y scale
barplot(table(dat.df$FueRemitido),
        main="El Paciente Fue Remitido: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,150)) # Alter color - Y scale
barplot(table(dat.df$Subregistro),
        main="Hubo Subregistro del Hecho: Barplot Frequency Distribution",
        col=c("green", "blue"), ylim=c(0,120)) # Alter color - Y scale

# REVIEW OF DATA FRAME ----------------------------------------------------
library(tidyverse)
view(dat.df) # To wacht on screen the dataset
class(dat.df) #class of dat.df object.
dim(dat.df) #Shows the size Rows and Columns
utils::str(dat.df) # Identify structure
glimpse(dat.df) # Same as above, but better printed.
utils::head(dat.df, n=3) # Show the head, 1st 3 cases #Standard is 6
utils::tail(dat.df, n=3) # Show the head, 1st 3 cases #Standard is 6
dat.df #To see de 1st 30 values of each variable
base::summary(dat.df) # Summary statistics

# DATA DISTRIBUTION AND TEST FOR NORMALITY --------------------------------
shapiro.test(dat.df$Edad) #What a Beauty! # Shapiro Test
RVAideMemoire::mshapiro.test(dat.df$Edad) # Normality test of Lbs overall
RVAideMemoire::byf.shapiro(Edad ~ Sexo,
                           data=dat.df) # Normality test of Edad by Sexo
nortest::ad.test(Edad) #The Anderson-Darling Test for Normal Dist.

# Edad (Años), Overall
QQAños <-
    ggplot2::ggplot(dat.df,
                  aes(sample=Edad)) +
  stat_qq(color="red") +
  stat_qq_line(color="blue", linewidth=1.75) +
  ggtitle("
Imagen 1: Distribución de la Edad de los Pacientes que consultaron por Intento de suicidio", subtitle = "Hospital Susana López de Valencia 2019")+
  labs(x = "\nTheoretical", y = "Edad (Años)\n") +
  theme_bw()+
theme(panel.background = element_rect(fill = "#72efdd"))
QQAños

# Edad (Años) by Procedencia (two breakouts)
QQFacetEdadProcedencia <-
  ggplot2::ggplot(dat.df,
                  aes(sample=Edad)) +
  stat_qq(color="red") +
  stat_qq_line(color="blue", linewidth=1.75) +
  facet_grid(. ~ Procedencia) +
  ggtitle("
Distribución de la Edad por Prcedencia") +
  labs(x = "\nTheoretical", y = "Edad (Años)\n") +
  theme_bw()

# Edad (Años) by Sexo (two breakouts)
QQFacetEdadSexo <-
  ggplot2::ggplot(dat.df,
                  aes(sample=Edad)) +
  stat_qq(color="red") +
  stat_qq_line(color="blue", size=1.75) +
  facet_grid(. ~ Sexo) +
  ggtitle("
Distribución de la Edad por el Sexo") +
  labs(x = "\nTheoretical", y = "Edad (Años)\n") +
  theme_bw()

gridExtra::grid.arrange(
  QQAños,
  QQFacetEdadProcedencia,
  QQFacetEdadSexo, ncol=3)

# DESCRIPTIVE STATISTICS ####
## LOCATION (CENTRAL TENDENCY) & VARIABILITY STATISTICS (DISPERSION) -------
### Single Statistics ####
utils::head(base::sort(Edad)) # Show the head, first values
utils::tail(base::sort(Edad))
base::sum(Edad) # Sum of all values
base::min(Edad) # Minimum value
base::which.min(Edad) # Minimum value location (e.g., row number)
base::max(Edad) # Maximum value
base::which.max(Edad) # Maximum value location (i.e., row number)
base::range(Edad) # Range of values, minimum to maximum
base::length(Edad) # Number of occurrences (e.g., N, datapoints)
stats::quantile(Edad) # Quantile scores, 0% 25% 50% 75% 100%
stats::quantile(dat.df$Edad, # Use of stats::quantile() function to produce
                prob=seq(0, 1, length=11), type=5) # deciles, 0% 10% 20% 30% 40% 50% 60% 70% 80% 90%

base::mean(Edad, na.rm=TRUE)
base::mean(Edad, trim = .1, na.rm=TRUE)
base::mean(Edad, trim = .05, na.rm=TRUE)
psych::geometric.mean(Edad)
psych::harmonic.mean(Edad)
psych::winsor.mean(Edad, trim=0.05)
stats::median(Edad, na.rm=TRUE)
asbio::Mode(Edad)

stats::sd(Edad, na.rm=TRUE) # Standard deviation
stats::IQR(Edad, na.rm=TRUE)
mad(Edad)
stats::var(Edad, na.rm=TRUE) # Variance
stats::var(dat.df$Edad) # Variance

### Multiple Statistics ####
# Boxplot Statistics: Lower-Whisker, Lower-Hinge, Mean, Median, Upper-Hinge, and Upper-Whisker, N, and Outliers
grDevices::boxplot.stats(Edad)
RcmdrMisc::numSummary(Edad,
                      statistics=c("mean", "mode", "sd", "quantiles", "CV", "var"))
pastecs::stat.desc(Edad,
                   basic=FALSE, desc=FALSE, norm=FALSE)
psych::describe(Edad, fast=TRUE)
base::summary(Edad)
doBy::descStat(Edad) #Note only put Edad dued to dat.df is already attached
tables::tabular((Edad) ~ (n=1) + Format(digits=2)*
                  (min + mode + mean + sd + median + IQR + mad + var + max))

s20x::summaryStats(Edad ~ Sexo,
                   data=dat.df,
                   na.rm=TRUE)

### Multiple Group Statistics ####
s20x::summaryStats(Edad, ~ Sexo, dat.df,
                   na.rm=TRUE) # Accommodate missing values
RcmdrMisc::numSummary(dat.df[,c("Edad")],
                      groups=Sexo) # Default printout, breakouts by Section
pivottabler::qpvt(dat.df, "Sexo", "Procedencia",
                  c("Mean Edad"="mean(Edad, na.rm=TRUE)",
                    "Median Edad"="median(Edad, na.rm=TRUE)",
                    "SD Edad"="sd(Edad, na.rm=TRUE)"),
                  formats=list("%.0f", "%.1f"))
epiDisplay::summ(dat.df$Edad,
                 by=Sexo, # Breakout statistics
                 graph=TRUE, # Dotplot
                 pch=20, ylab="auto",
                 main="Sorted Dotplot of Edad (Años) por Procedencia",
                 cex.X.axis=1.25, # Note X axis label size.
                 cex.Y.axis=1.25, # Note Y axis label size.
                 font.lab=2, dot.col="auto")





## TABLES -----------------------------------------------------------------
library(tables)
### Template Table ####
dat.df %>% select(c(Sexo, Edad, Etnia, EstadoCivil, Procedencia)) %>%
  tbl_summary(
    by = NULL,
    label = list(Edad ~ "Edad (Años)", Sexo ~ "Género", Etnia ~ "Etnia", EstadoCivil ~ "Estado Civil", Procedencia ~ "Procedencia"),
    statistic = NULL,
    digits = NULL,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 1. Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 1: Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019. ####
dat.df %>% select(c(Sexo, Edad, Etnia, EstadoCivil, Procedencia, Estrato, Escolaridad)) %>%
  tbl_summary(
    by = NULL,
    label = list(Edad ~ "Edad (Años)", Sexo ~ "Sexo", Etnia ~ "Etnia", EstadoCivil ~ "Estado Civil", Procedencia ~ "Procedencia", Estrato ~ "Estrato", Escolaridad ~"Escolaridad"),
    statistic = NULL,
    digits = all_continuous() ~ 0,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 1. Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 1 (Continuación: Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019. ####
dat.df %>% select(c(Ocupacion)) %>%
  tbl_summary(
    by = NULL,
    label = list(Ocupacion ~ "Ocupación"),
    statistic = NULL,
    digits = all_continuous() ~ 0,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 1 (Continuación). Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 2: Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019. ####
dat.df %>% select(c(IntentosPrevios, NumeroIntentosPrevios, EnfermedadFisica, EnfermedadMental)) %>%
  tbl_summary(
    by = NULL,
    label = list(IntentosPrevios ~ "Intentos de Suicidio Previos", NumeroIntentosPrevios ~ "Número de Intentos de Suicidio Previos", EnfermedadFisica ~ "Antecedentes Médicos", EnfermedadMental ~ "Antecedentes de Enfermedad Mental"),
    statistic = NULL,
    digits = all_continuous() ~ 0,
    type = list(NumeroIntentosPrevios ~ "continuous"),
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 2. Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 3: Características del Evento ####
dat.df %>% select(c(Dia, Mes, Lugar, Metodo, Motivos, Premeditacion, Planificacion, GestosDespedida)) %>%
  tbl_summary(
    by = NULL,
    label = list(Dia ~ "Dia", Mes ~ "Mes", Lugar ~ "Lugar", Metodo ~ "Métdo", Motivos ~ "Motivos", Premeditacion ~ "Premeditación", Planificacion ~ "Planificación", GestosDespedida ~ "Gestos de Despedidad"),
    statistic = NULL,
    digits = NULL,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 3. Características del Evento en los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 4: Características de la Atención ####
dat.df %>% select(c(DeterminacionRiesgo, Riesgo, AltaMismoDia, AltaVoluntaria)) %>%
  tbl_summary(
    by = NULL,
    label = list(DeterminacionRiesgo ~ "Se determinó el Nivel del Riesgo", Riesgo ~ "Riesgo de Ideación e Intento de Suicidio", AltaMismoDia ~ "El paciente fue egresado el mismo día", AltaVoluntaria ~ "Solicitud de Alta Voluntaria"),
    statistic = NULL,
    digits = NULL,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 4. Características de la Atención del Evento en los Pacientes con Intento de Suicidio HSLV 2019**")

### Tabla 5: Características del Seguimiento ####
dat.df %>% select(c(EstanciaHospitalaria, PersistenciaIdeacion, FueRemitido, ProfesionalRemitido, Subregistro)) %>%
  tbl_summary(
    by = NULL,
    label = list(EstanciaHospitalaria ~ "Días de Estancia Hospitalaria", PersistenciaIdeacion ~ "Hay persistencia de la ideación suicida", FueRemitido ~ "El paciente fue Remitido a un Profesional en Salud Mental", ProfesionalRemitido ~ "A qué profesional en Salud Mental fue remitido", Subregistro ~ "Subregistro del Hecho"),
    statistic = NULL,
    digits = all_continuous() ~ 0,
    type = list(EstanciaHospitalaria ~ "continuous"),
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  modify_caption("**Tabla 5. Características del Seguimiento del Evento en los Pacientes con Intento de Suicidio HSLV 2019**")

### Table with Categories ####
dat.df %>% select(c(Sexo, Edad, Etnia, EstadoCivil)) %>%
  tbl_summary(
    by = Sexo,
    label = NULL,
    statistic = NULL,
    digits = NULL,
    type = NULL,
    value = NULL,
    missing = "ifany",
    missing_text = "Sin Información",
    sort = NULL,
    percent = NULL,
    include = everything()
  )%>%
  add_p(
    test = NULL,
    pvalue_fun = NULL,
    group = NULL,
    include = everything(),
    test.args = NULL,
  ) %>%
  add_overall(
    last = FALSE,
    col_label = "**Total**, N = {N}",
    statistic = NULL,
    digits = NULL,
  ) %>%
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Sexo**") %>%
  modify_caption("**Tabla 1. Características Sociodemográficas de los Pacientes con Intento de Suicidio HSLV 2019**")

## GRAPHICS -----------------------------------------------------------------

### Scatter Plot ####
# aes x (Numeric), y (numeric), col (Categorical)
# Note each category has its shape
par(ask=TRUE)
par(mfrow=c(1,1)) # To put several graphics on the same image
ggplot2::ggplot(dat.df) + # DATA
  aes(x=Edad, y=EstanciaHospitalaria, col=Sexo, shape=Sexo) + # AESTHETICS
  geom_point() + # GEOMETRICS
  geom_smooth (position = "identity") + # GEOMETRICS
  ggtitle("Ocupación de los Pacientes que consultaron por Intento de Suicidio al Hospital Susana López de Valencia 2019", subtitle = "Rojo (Femenino) - Azul (Masculino)") +
  xlab("Edad") +
  ylab("Estancia Hospitalaria") +
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  stat_smooth(NULL) + # STATISTICAL TRANSFORMATIONS
  facet_grid(Estrato ~ Procedencia,labeller = "label_both") + #FACETS
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))

theme(panel.border = element_rect(fill = "transparent", color = "#72efdd",linewidth = 4))+
  theme(panel.grid = element_line(color = "#3a0ca3",size = 1,linetype = 3))+
  theme(plot.background = element_rect(color = 1,size = 1),
        plot.margin = margin(t = 20,r = 50,b = 40,l = 30))+
  theme(plot.title = element_text(face = "bold", hjust = NULL, size = 16, color = "black")) +
  theme(plot.subtitle = element_text(face="italic", size = 14, color = "black")) +
  theme(axis.title.x=element_text(size=12)) +
  theme(axis.text.x=element_text(size=10)) +
  theme(axis.title.y=element_text(size=12)) +
  theme(axis.text.y=element_text(size=10)) +
  theme(axis.ticks.x=element_line(linewidth = 0.5)) +
  theme(axis.ticks.y=element_line(linewidth = 0.5)) +
  theme(axis.ticks.length=unit(0.1,"cm"))


# Create subplots using gridExtra    
# Remember to create the 4 grids by first, Second, Third, Fourth <- 
library(gridExtra)
grid.arrange(first,second,third,fourth, nrow = 2)

### Q-Q Plot Imagn 1: Distribución de la Edad ####
par(ask=TRUE)
par(mfrow=c(1,1)) # To put several graphics on the same image
ggplot2::ggplot(dat.df) + # DATA
  aes(sample=Edad, colour="Edad") + # AESTHETICS
  geom_qq(geom="path", position="identity")+ # GEOMETRICS
  geom_qq_line(geom="path", position="identity") + # GEOMETRICS
  ggtitle("Imagen 1: Distribución de la Edad de los Pacientes que consultaron por Intento de Suicidio", subtitle = "Hospital Susana López de Valencia 2019")+
  xlab("Theoretical Quantile") +
  ylab("Edad (Años)") + 
  
  stat_qq(color="red4") +
  stat_qq_line(color="blue", linewidth=1.50) + # STATISTICAL TRANSFORMATIONS
  
  scale_alpha()+
  scale_fill_brewer(palette = "Set1") +
  
  theme_grey()  +#VISUAL THEMES
  theme(plot.title = element_text(face="bold", size = 15)) +
  theme(plot.subtitle = element_text(size = 13)) +
  theme(panel.background = element_rect(fill = "#72efdd"))

### Barplot ####
# Remember to erase the coord_flip, fill and facet_grid.
  par(ask=TRUE)
  par(mfrow=c(1,1)) # To put several graphics on the same image
  ggplot2::ggplot(dat.df) + # DATA
    aes(x=Edad, y=EstanciaHospitalaria, col=Sexo, shape=Sexo) + # AESTHETICS
    geom_point() + # GEOMETRICS
    geom_smooth (position = "identity") + # GEOMETRICS
    coord_flip()+ #Horizontal barplot
    ggtitle("Ocupación de los Pacientes que consultaron por Intento de Suicidio al Hospital Susana López de Valencia 2019", subtitle = "Rojo (Femenino) - Azul (Masculino)") +
    xlab("Edad") +
    ylab("Estancia Hospitalaria") +
    scale_alpha() + # SCALES
    scale_fill_brewer(palette = "Set1")+
    stat_smooth(NULL) + # STATISTICAL TRANSFORMATIONS
    facet_grid(Estrato ~ Procedencia,labeller = "label_both") + #FACETS
    theme_grey() + #VISUAL THEMES
    theme(panel.background = element_rect(fill = "#72efdd"))

### Barplot Imagen 2: Características Socio-Demográficas de los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(dat.df) + #DATA
  aes(x=Escolaridad, fill=EstadoCivil) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
    ggtitle("Imagen 2: Características Socio-Demográficas de los Pacientes con Intento de Suicidio", subtitle =  "Hospital Susana López de Valencia 2019") +
  xlab("Escolaridad") +
  ylab("Número de Pacientes") +
  labs(caption = "NA: Sin información")+
  scale_alpha()+
scale_fill_brewer(palette = "Set1")+
  facet_grid(Procedencia ~ Sexo,labeller = "label_both") + #FACETS
    theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  theme(plot.caption = element_text(hjust=0))

gridExtra::grid.arrange(
  BarSexo,
  BarEstadoCivil,
  BarProcedencia,
  BarEstrato,
  ncol=2, nrow=2,
top = textGrob("Imagen 2: Sexo, Estado Civil, Procedencia y Estrato Socio-Económico de los Pacientes con Intento de Suicidio HSLV 2019",
               gp=gpar(fontsize=15,
                       font=1)))


### Barplot Imagen 3: Características Socio-Demográficas de los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(CEstrato) + #DATA
  aes(x=Ocupacion, fill=Estrato) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  ggtitle("Imagen 3: Características Socio-Demográficas de los Pacientes con Intento de Suicidio", subtitle =  "Hospital Susana López de Valencia 2019") +
  xlab("Ocupación") +
  ylab("Número de Pacientes") +
  labs(caption = "NA: Sin información") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(plot.title = element_text(face="bold", size = 15)) +
  theme(plot.subtitle = element_text(size = 13)) +
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  theme(plot.caption = element_text(hjust=0))

gridExtra::grid.arrange(
  BarSexo,
  BarEstadoCivil,
  BarProcedencia,
  BarEstrato,
  ncol=2, nrow=2,
  top = textGrob("Imagen 2: Sexo, Estado Civil, Procedencia y Estrato Socio-Económico de los Pacientes con Intento de Suicidio HSLV 2019",
                 gp=gpar(fontsize=15,
                         font=1)))


### Barplot Imagen 5: Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(CIntentosPrevios) + #DATA
  aes(x=IntentosPrevios, fill=Subregistro) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  ggtitle("Imagen 5: Características Clínicas de los Pacientes con Intento de Suicidio", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Intentos de Sucidio Previos") +
  ylab("Número de Pacientes") +
  labs(caption = FALSE) +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  facet_grid(TieneEnfermedadFisica ~ TieneEnfermedadMental,labeller = "label_both") + #FACETS
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
  theme(plot.caption = element_text(hjust=0))

BarEnfermedadFisica <- ggplot2::ggplot(dat.df) + #DATA
  aes(x=EnfermedadFisica, fill=NULL) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle(NULL) +
  xlab("Antecedentes Médicos") +
  ylab("Número de Pacientes") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

BarEnfermedadMental <- ggplot2::ggplot(dat.df) + #DATA
  aes(x=EnfermedadMental, fill=NULL) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle(NULL) +
  xlab("Antecedentes de Enfermedad Mental") +
  ylab("Número de Pacientes") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

gridExtra::grid.arrange(
  BarIntentosPrevios,
  BarEnfermedadFisica,
  BarEnfermedadMental,
  ncol=3, nrow=1,
  top = textGrob("Imagen 7: Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019",
                 gp=gpar(fontsize=15,
                         font=1)))


### Barplot Imagen 6: Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
BarEnfermedadFisica <- ggplot2::ggplot(CIntentosPrevios) + #DATA
  aes(x=EnfermedadFisica, fill=IntentosPrevios) + #AESTHETICS 
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle(NULL) +
  xlab("Antecedentes Médicos") +
  ylab("Número de Pacientes") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

BarEnfermedadMental <- ggplot2::ggplot(CIntentosPrevios) + #DATA
  aes(x=EnfermedadMental, fill=IntentosPrevios) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle(NULL) +
  xlab("Antecedentes de Enfermedad Mental") +
  ylab("Número de Pacientes") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

gridExtra::grid.arrange(
  BarEnfermedadFisica,
  BarEnfermedadMental,
  ncol=2, nrow=1,
  top = textGrob("Imagen 6: Características Clínicas de los Pacientes con Intento de Suicidio \nHospital Susana López de Valencia 2019",
                 gp=gpar(fontsize=15,
                         font=2)))


### Barplot Imagen 7: Características Del Evento en los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(dat.df) + #DATA
  aes(x=Mes, fill=Dia) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  ggtitle("Imagen 7: Características del evento en pacientes con intento de suicidio", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Dia y Mes") +
  ylab("Número de Pacientes") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(plot.title = element_text(face="bold", size = 15)) +
  theme(plot.subtitle = element_text(size = 13)) +
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

gridExtra::grid.arrange(
  BarIntentosPrevios,
  BarEnfermedadFisica,
  BarEnfermedadMental,
  ncol=1, nrow=1,
  top = textGrob("Imagen 7: Características Clínicas de los Pacientes con Intento de Suicidio HSLV 2019",
                 gp=gpar(fontsize=15,
                         font=1)))


### Barplot Imagen 8: Características Del Evento en los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(CPremeditacion) + #DATA
  aes(x=Motivos, fill=Premeditacion) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle("Imagen 8: Características del evento en pacientes con intento de suicidio", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Motivos") +
  ylab("Número de Pacientes") +
  labs(caption = "NA: Sin información") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(plot.title = element_text(face="bold", size = 15)) +
  theme(plot.subtitle = element_text(size = 13)) +
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
  theme(plot.caption = element_text(hjust=0))



### Barplot Imagen 9: Características Del Evento en los Pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(CPlanificacion) + #DATA
  aes(x=Metodo, fill=Planificacion) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  coord_flip()+
  ggtitle("Imagen 9: Características del evento en pacientes con intento de suicidio", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Método empleado") +
  ylab("Número de Pacientes") +
    scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))
  
### Barplot Imagen 10: Características de la atención del evento en los pacientes con Intento de Suicidio HSLV 2019 #### 
par(ask=TRUE)
ggplot2::ggplot(dat.df) + #DATA
  aes(x=Riesgo, fill=PersistenciaIdeacion) + #AESTHETICS
  geom_bar(stat="count",
           position = "stack") + # GEOMETRICS
  ggtitle("Imagen 10: Características de la atención y seguimiento del evento en los pacientes con Intento de Suicidio", subtitle =  "Hospital Susana López de Valencia 2019") +
  xlab("Riesgo") +
  ylab("Número de Pacientes") +
  labs(caption = "NA: Sin información") +
  scale_alpha()+
  scale_fill_brewer(palette = "Set1")+
  facet_grid(AltaVoluntaria ~ FueRemitido,labeller = "label_both") + #FACETS
  theme_grey() + #VISUAL THEMES
  theme(plot.title = element_text(face="bold", size = 15)) +
  theme(plot.subtitle = element_text(size = 13)) +
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
  theme(plot.caption = element_text(hjust=0))

gridExtra::grid.arrange(
  BarSexo,
  BarEstadoCivil,
  BarProcedencia,
  BarEstrato,
  ncol=2, nrow=2,
  top = textGrob("Imagen 2: Sexo, Estado Civil, Procedencia y Estrato Socio-Económico de los Pacientes con Intento de Suicidio HSLV 2019",
                 gp=gpar(fontsize=15,
                         font=1)))


### Histogram ####
# Remember to erase the coord_flip, fill and facet_grid.
par(ask=TRUE)
par(mfrow=c(1,1)) # To put several graphics on the same image
ggplot2::ggplot(dat.df) + #DATA
  aes(x=Edad, fill=Sexo, after_stat(count)) + #AESTHETICS
  geom_histogram(binwidth = 2,
                 position = "identity",
                 alpha = 0.75,
                 na.rm = TRUE)+
  ggtitle("Edad de los Pacientes que consultaron por Intento de Suicidio", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Edad") +
  ylab("Número de Pacientes") +
  scale_x_continuous(name = "Edad (Años)",
                     breaks = seq(10, 60, 5),
                     limits = c(10, 60))+
  scale_y_continuous(name = "Número de Pacientes")+
  scale_fill_brewer(palette = "Set1")
!facet_grid(Estrato ~ Procedencia,labeller = "label_both") + #FACETS
  theme_grey() + #VISUAL THEMES
  theme(panel.background = element_rect(fill = "#72efdd"))+
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1))

### BoxPlot ####
library(ggplot2) # Load the ggplot2 package.
library(ggthemes) # Load the ggthemes package.
library(ggmosaic) # Load the ggmosaic package.
library(gridExtra) # Load the gridExtra package.
library(grid) # Load the grid package.
library(scales) # Load the scales package.

par(ask=TRUE)
par(mfrow=c(1,1)) # To put several graphics on the same image
ggplot2::ggplot(dat.df, #DATA
                aes(x=Sexo, y=NumeroIntentosPrevios, fill=Sexo)) + #AESTHETICS
  geom_boxplot(position = "dodge") +
  ggtitle("Número de Intentos Previos de Acuerdo al Sexo", subtitle = "Hospital Susana López de Valencia 2019") +
  xlab("Sexo") +
  ylab("Número de Intentos Previos") +
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  stat_summary(fun.y=mean, geom="point", shape=1, size=6, col="black") +
  theme_grey()+  #VISUAL THEMES
  theme(legend.position="none")+ # No legend
  facet_grid(Estrato ~ Procedencia,labeller = "label_both") + #FACETS
  
### Boxplot Imagen 4: Edad de los pacientes....  ####
  par(ask=TRUE)
par(mfrow=c(1,1)) # To put several graphics on the same image
BoxEdad <- ggplot2::ggplot(dat.df, #DATA
                aes(x=Edad)) + #AESTHETICS
  geom_boxplot(position = "dodge") +
  ggtitle(NULL) +
  xlab("Edad (Años)") +
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  theme_grey()+  #VISUAL THEMES
  theme(legend.position="none")

BoxNumeroIntentos <- ggplot2::ggplot(dat.df, #DATA
                aes(x=NumeroIntentosPrevios)) + #AESTHETICS
  geom_boxplot(position = "dodge") +
  ggtitle(NULL) +
  xlab("Número de Intentos Previos") +
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  theme_grey()+  #VISUAL THEMES
  theme(legend.position="none")

BoxEstanciaHospitalaria <- ggplot2::ggplot(dat.df, #DATA
                aes(x=EstanciaHospitalaria)) + #AESTHETICS
  geom_boxplot(position = "dodge") +
  scale_x_continuous(limits = c(0, 32), breaks = seq(0, 32, 3)) +
      ggtitle(NULL) + 
  xlab("Días de Estancia Hospitalaria") +
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  theme_grey()+  #VISUAL THEMES
  theme(legend.position="none")

gridExtra::grid.arrange(
  BoxEdad,
  BoxNumeroIntentos,
  BoxEstanciaHospitalaria,
    ncol=2, nrow=2,
  top = textGrob("Imagen 4: Edad, Número de Intentos Previos y Estancia Hospitalaria de los Pacientes con Intento de Suicidio \nHospital Susana López de Valencia 2019",
                 gp=gpar(fontsize=15,
                         font=2)))
### Boxplot de la Edad ####


 #### Complex Plots 1 var. Num * 2 var. Cat ####
ggplotEdad1 <-
  ggplot2::ggplot(dat.df,
                  aes(x=Edad)) +
  geom_density(alpha = 0.5) +
  ggtitle("Edad Pacientes con Intento de Suicidio HSLV 2019") +
  xlab("Edad (Años)") +
  ylab("Número de Pacientes") +
  theme_few() +   # Review the ggthemes package
  theme(legend.position="none") # No legend
ggplotEdad2 <-
  ggplot2::ggplot(dat.df,
                  aes(x=Sexo, y=Edad, fill=Sexo)) +
  geom_boxplot() +
  stat_summary(fun.y=mean, geom="point", shape=1, size=6,
               col="black") +
  facet_grid( ~ as.factor(Procedencia)) +
  ggtitle("Edad Pacientes con Intento de Suicidio Hospital 
          Susana López de Valencia, Popayán - Cauca,  2019") +
  xlab("Sexo") +
  ylab("Edad") +
  scale_y_continuous(labels=scales::comma, limits=c(0,60),
                     breaks=scales::pretty_breaks(n = 3)) +
  theme_stata() + # Review the ggthemes package
  theme(legend.position="none") # No legend
par(ask=TRUE); gridExtra::grid.arrange(
  ggplotEdad1,
  ggplotEdad2, ncol=1)

#### Very Complex Density Facet 1 var. Numer * 2 var. Cat ####
DensityFacetSexoEdad <-
  ggplot2::ggplot(dat.df,
                  aes(x=Edad)) +
  geom_density(col="red", lwd=2) +
  facet_grid(. ~ Sexo) +
  ggtitle("Sexo por Edad (Años)\n") +
  labs(x = "\nEdad (Años)", y = "Density\n") +
  scale_x_continuous(labels=scales::comma, limits=c(10,60),
                     breaks=seq(10,60, by=25)) +
  theme_bw()
DensityFacetProcedenciaEdad <- # Procedencia (two breakouts) por Edad
  ggplot2::ggplot(dat.df,
                  aes(x=Edad)) +
  geom_density(col="red", lwd=2) +
  facet_grid(. ~ Procedencia) +
  ggtitle("Procedencia por Edad (Años)\n") +
  labs(x = "\nEdad (Años)", y = "Density\n") +
  scale_x_continuous(labels=scales::comma, limits=c(10,60),
                     breaks=seq(10,60, by=25)) +
  theme_bw()
BoxplotSexoEdad <- # Sexo (two breakouts) Por Edad
  ggplot(dat.df,
         aes(x=Sexo, y=Edad, fill=Sexo)) +
  geom_boxplot() +
  ggtitle("Sexo por Edad (Años)\n") +
  labs(x = "\nSexo", y = "Edad (Años)\n") +
  scale_y_continuous(labels=scales::comma, limits=c(10,50),
                     breaks=seq(10,50, by=25)) +
  theme_bw()
BoxplotProcedenciaEdad <- # Procedencia (two breakouts) por Edad
  ggplot(dat.df,
         aes(x=Procedencia, y=Edad, fill=Procedencia)) +
  geom_boxplot() +
  ggtitle("Procedencia por Edad (Años)\n") +
  labs(x = "\nProcedencia", y = "Edad (Años)\n") +
  scale_y_continuous(labels=scales::comma, limits=c(10,50),
                     breaks=seq(10,50, by=25)) +
  theme_bw()
gridExtra::grid.arrange(
  DensityFacetSexoEdad,
  DensityFacetProcedenciaEdad,
  BoxplotSexoEdad,
  BoxplotProcedenciaEdad, ncol=2)

# EFFECT SIZE STATISTICS ####
## ANOVA MODEL ####
# Recall that there are two parameters in an ANOVA model: β0, which is 
# the average predicted Y score on the outcome when X = 0, and β1, which 
# is the estimate of the strength and direction of the X-Y relationship. 
# Since our interest is almost always the X-Y relationship, our data 
# analytic efforts are focused on β1.

### 3.2.1 Location-Based Effect Size Statistics ####

#### Calculation of Mean and median #####

# These statistics describe how average or typical scores in group 1 
# differ from average or typical scores in group 2. 
# Note that the order in which you subtract one group mean from the 
# other determines the sign of the statistic and the sign indicates the 
# direction of theX-Y effect or relationship.
# MEAN DIFERENCE (MD) = mean(Y1) - mean(Y2), MD = 5 - 3

tapply(dat.df$EstanciaHospitalaria,dat.df$Riesgo,mean,na.rm=TRUE)
tapply(dat.df$EstanciaHospitalaria,dat.df$Riesgo, function(x) mean(x,trim=0.1,na.rm=TRUE))
tapply(dat.df$EstanciaHospitalaria,dat.df$Riesgo,median,na.rm=TRUE)

#### Calculation of the Mean Difference (MD) ####
MD<-mean(dat.df$EstanciaHospitalaria[dat.df$Riesgo=="Alto"],na.rm=T)-
  mean(dat.df$EstanciaHospitalaria[dat.df$Riesgo=="Bajo"],na.rm=T)
MD

#### Calculation of the median difference (MedD) ####
MedD<-median(CRiesgo$EstanciaHospitalaria[CRiesgo$Riesgo=="Alto"],na.rm=T)-
  median(CRiesgo$EstanciaHospitalaria[CRiesgo$Riesgo=="Bajo"],na.rm=T)
MedD

# INTERPRETACIÓN
# Acá por ejemplo una MD, MDtr, MedD de estancia hospitalaria 
# masculino de 1.4 se interpreta como  1.4 días más de 
# estancia hospitalaria. Es decir, en términos de la Y que es 
# estancia hospitalaria.

### 3.2.2 Other Effect Size Statistics ####
#### Calculation of variability #####
# The VARIANCE RATIO captures the variances of two groups of  scores in 
# an ANOVA model in ratio form. VR = var(Y1)/var(Y2)
# The variance ratio describes how much greater the larger group variance 
# is than the smaller group variance.
# VR = 1.5 means that the variance of the more variable group is 1.5 times, 
# or 50%, larger than the variance of the less variable group.
# n group variances are substantially different when VR > 3.0.

tapply(dat.df$EstanciaHospitalaria,dat.df$Riesgo,var,na.rm=TRUE)

#### Calculation of variance ratio (VR) #####
VR<-var(dat.df$EstanciaHospitalaria[dat.df$Riesgo=="Alto"],na.rm=T)/ #
  var(dat.df$EstanciaHospitalaria[dat.df$Riesgo=="Bajo"],na.rm=T) # d. It is recommended that you calculate  the VR so that it ends up being greater, rather than less, than 1.0.
VR

# INTERPRETACIÓN
# Acá por ejemplo una VRde estancia hospitalaria 
# masculino de 1.5 se interpreta como  que la varianza en la  estancia
# hospitalaria masculinoo es 1.5 veces más o 50% mayor a la de la 
# femenina. 

# Group variances are substantially different (e.g., VR > 3.0) 
# and recommend further exploration as to why.

#### Calculation of Cohen’s d Standarized Mean Difference (SMD) ####
# COHEN´S D Formula is a STANDARIZED MEAN DIFFERENCE statistic. The 
# “standardization” is done by dividing the mean difference by the average 
# of the groups’ standard deviations, which produces a statistic that 
# renders the mean difference in standard deviation units. 
library(effsize)
d<-effsize::cohen.d(dat.df$EstanciaHospitalaria,dat.df$Riesgo,na.rm=TRUE)
d$estimate

# La estancia hospitalaria es 0.4 desviaciones estandar mayor
# en el grupo de alto riego que en el grupo de bajo riesgo.

### Graphical summaries of the relationship between X-Y ####
library(lattice)
#### Histogram ####
histogram(~EstanciaHospitalaria|Riesgo,data=dat.df,
          type="count",
          breaks=seq(0,16,by=1),
          layout=c(1,2))

ggplot(dat.df,
       aes(x = EstanciaHospitalaria, color = Riesgo, fill = Riesgo))+
  geom_histogram(alpha = 0.5)

#### Density Plot ####
densityplot(~EstanciaHospitalaria|Riesgo,data=dat.df,
            breaks=seq(0,20,by=1),
            plot.points="F",layout=c(1,2))

ggplot(dat.df, 
       aes(x = EstanciaHospitalaria, colour = Riesgo, fill = Riesgo)) +
  geom_density(alpha = 0.5) #alpha es para que quede "transparante"


#### Boxplot ####
bwplot(Riesgo~EstanciaHospitalaria,data=dat.df)

ggplot(dat.df,
       aes(x = Riesgo, color = Riesgo, fill = Riesgo, y = EstanciaHospitalaria))+
  geom_boxplot(alpha = 0.5)
### 3.4 Exploring Infuential Values ####

# Generate the boxplot output and assign it to an object name (b).

b<-boxplot(Edad~Riesgo,plot=F, data = dat.df)


# Retrieve the 5-number summaries from that object (mainly to identify 
  # the lower and upper adjacent values).
b$stats

# Generate the group ns for reporting purposes.
b$n

# List the outlier values and their respective group. If desired, one can 
  # count the total number of outliers for reporting purposes. The 
  # highlighted cases are the boxplot-defned outliers in the female group
b$out

#group assignments of outlier values
b$group
b$names
length(b$out)


### 3.5 Interpreting Group Differences from an ANOVA Model ####
### 3.6 Data Analytic Example 2 ####
#### Paneled histograms and boxplots of remission time by treatment group. ####
  # plots
histogram(~EstanciaHospitalaria|Riesgo,data=dat.df,
          type="count",
          breaks=seq(0,17,by=1),
          layout=c(1,2))
  # boxplot
bwplot(Sexo~NumeroIntentosPrevios,data=dat.df)

#### Calculation of Mean and median #####
tapply(dat.df$NumeroIntentosPrevios,dat.df$Sexo,mean, na.rm=TRUE)
tapply(dat.df$NumeroIntentosPrevios,dat.df$Sexo,median, na.rm=TRUE)

#### Calculation of the mean difference (MD) ####
MD<-mean(dat.df$NumeroIntentosPrevios[dat.df$Sexo=="Femenino"],na.rm=T)-
  mean(dat.df$NumeroIntentosPrevios[dat.df$Sexo=="Masculino"],na.rm=T)
MD

#### Calculation of Cohen’s d Standarized Mean Differencie (SMD) ####
d<-effsize::cohen.d(dat.df$NumeroIntentosPrevios,dat.df$Sexo, na.rm=TRUE)
d$estimate

#### Calculation of variance ratio (VR) #####
tapply(dat.df$NumeroIntentosPrevios,dat.df$Sexo,var,na.rm=TRUE)
VR<-var(dat.df$NumeroIntentosPrevios[dat.df$Sexo=="Femenino"],na.rm=T)/
  var(dat.df$NumeroIntentosPrevios[dat.df$Sexo=="Masculino"],na.rm=T)
VR

# La diferencia de medias (MD = 0.03) muestra que las mujeres comparadas
  #  tienen 0.03 intentos previos de suicidio comparadas con los hombres.
# Ser mujer resulta en un  Cohen’s d = 0.02 o 0.02 SD difference entre los 
  # dos grupos. F
# Ser mujer afecta la variabilidad del número de intentos de suicidio con 
  # el grupo de las mujeres con una varianza 1.05 veces más amplia/grande
  # que el grupo masculino

### Histogram Imagen 11: Asociación entre el nivel de riesgo suicida y el número de días de estancia hospitalaria en los pacientes con Intento de Suicidio HSLV 2019 ####
# Remember to erase the coord_flip, fill and facet_grid.
par(ask=TRUE)
img_11a <- ggplot2::ggplot(CRiesgo,
  aes(x=Riesgo, colour = Riesgo, fill = Riesgo, y = EstanciaHospitalaria)) + #AESTHETICS
  geom_boxplot(position = "dodge",
               alpha=0.45) +
  ggtitle(NULL) +
    xlab("Riesgo") +
  ylab("Estancia Hospitalaria (Días)")+
  scale_alpha() + # SCALES
  scale_fill_brewer(palette = "Set1")+
  theme_grey()+  #VISUAL THEMES
  theme(legend.position="none")

img_11b <- ggplot2::ggplot(CRiesgo) + #DATA
  aes(x=EstanciaHospitalaria, fill = Riesgo, after_stat(count)) + #AESTHETICS
  geom_histogram(binwidth = 1,
                 position = "identity",
                 alpha = 0.45,
                 na.rm = TRUE)+
  ggtitle(NULL, subtitle = NULL) +
   scale_x_continuous(name = "Estancia Hospitalaria (Días)",
                     breaks = seq(1, 17, 1),
                     limits = c(1, 17))+
  scale_y_continuous(name = "Número de Pacientes")+
  scale_fill_brewer(palette = "Set1")

gridExtra::grid.arrange(
  img_11a,
  img_11b,
  ncol=2, nrow=1,
  top = textGrob("Imagen 11: Asociación entre el nivel de riesgo suicida y el número de días de estancia hospitalaria en pacientes con intento de suicidio \nHospital Susana López de Valencia 2019",
                 gp=gpar(fontsize=15,
                         font=1)))


## PROPORTIONS MODEL ####

#### Bar Plot (Two Categorical Variables) ####
ggplot(dat.df,
       aes(x = Riesgo, fill = IntentosPrevios)) +
  geom_bar()

# Relative frequency plot
ggplot(dat.df,
       aes(x = Riesgo, fill = IntentosPrevios)) +
  geom_bar(position = "fill")

### CROSSTABS ------------------------------------------------------
library(s20x)
attach(dat.df) # Attach the data, for later use
Riesgo x Intentos Previos
Riesgo x Tiene Enfermedad Mental
Riesgo x Premeditación
Riesgo x Planificación
Persistencia Ideación x Intentos Previos

par(ask=TRUE)
s20x::rowdistr(crosstabs(~ Sexo + Riesgo,
                         data=dat.df), plot=TRUE, suppressText=FALSE,
               comp="basic")



# crosstab with p-Value by Fisher´s exact test
dat.df %>%
  tbl_cross(
    row = Edad,
    col = Riesgo,
    percent = "cell"
  ) %>%
  add_p() %>%
  modify_caption("**Relación entre el sexo y el riesgo de Intento Suicida**")


# Numeric Crosstab
summary(arsenal::tableby(list(Edad, Riesgo) ~ NumeroIntentosPrevios,
                         data = dat.df), text=TRUE, total=TRUE)

library(epiDisplay)
epiDisplay::tableStack(
  vars=Edad, # Rows
  dataFrame=dat.df,
  by=Riesgo, count=TRUE, decimal=2, # Columns
  percent=c("column", "row"),
  frequency=TRUE, name.test=TRUE,
  na.rm = TRUE,
  total.column=TRUE, test=TRUE)


#### Tabla 6: Tabla 6: Asociación entre los intentos previos de suicidio y el nivel de riesgo de suicidio en los pacientes con intento de suicidio HSLV 2019 ####
RxIP.df %>%
  tbl_cross(
    row = Riesgo,
    col = IntentosPrevios,
    percent = "cell"
  ) %>%
  add_p() %>%
  modify_caption("**Tabla 6: Asociación entre los intentos previos de suicidio y el nivel de riesgo de suicidio en los pacientes con intento de suicidio HSLV 2019.**")


#### Tabla 7: Asociación entre la presencia de premeditación y el nivel de riesgo de suicidio en los pacientes con intento de suicidio HSLV 2019 ####
RxPre.df %>%
  tbl_cross(
    row = Riesgo,
    col = Premeditacion,
    percent = "cell"
  ) %>%
  add_p() %>%
  modify_caption("**Tabla 7: Asociación entre la presencia de premeditación y el nivel de riesgo de suicidio en los pacientes con intento de suicidio HSLV 2019.**")



## Student´s T-Test For Independent Samples ####
t.test(dat.df$Edad ~ # Measured variable
         dat.df$Procedencia, # Grouping variable
       alternative="two.sided", # Two-sided t-Test
       paired=FALSE, # Independent samples
       na.rm=TRUE, # Missing data
       var.equal=TRUE) # Equal variance

# Confirmation of outcomes for Percent Butterfat by Breed
onewaytests::describe(Edad ~ Procedencia,
                      data=dat.df)
# Generate descriptive statistics of PctButterfat by
# Breed.recode and confirm that the results are in close
# parity to prior outcomes.

onewaytests::st.test(Edad ~ Procedencia,
                     data=dat.df, alpha=0.05, na.rm=TRUE,
                     verbose=TRUE)
# Perform a Student’s t-Test for two samples and confirm
# that the results are in close parity to prior outcomes

onewaytests::wt.test(Edad ~ Procedencia,
                     data=dat.df, alpha=0.05, na.rm=TRUE,
                     verbose=TRUE)
# Perform a Welch’s Unequal Variances t-Test for two
# samples and confirm that the results are in close
# parity to prior outcomes.



# EXIT --------------------------------------------------------------------
getwd() # Identify the current working directory.
ls() # List all objects in the working
# directory.
ls.str() # List all objects, with finite detail.
list.files() # List files at the PC directory.
save.image("IntentodeSuicidioHSLV2019.RDATA")
getwd() # Identify the current working directory.
ls() # List all objects in the working
# directory.
ls.str() # List all objects, with finite detail.
list.files() # List files at the PC directory.
alarm() # Alarm, notice of upcoming action.
q() # Quit this session.
# Prepare for Save workspace image? query.
# REVIEW ####
BoxplotPctButterfatBreed.recode <-
  ggplot2::ggplot(CRiesgo,
                  aes(x=factor(0), y=EstanciaHospitalaria)) +
  geom_boxplot() +
  facet_grid(. ~ Riesgo) +
  ggtitle(
    "Percent Butterfat Produced by Holstein and Jersey
Dairy Cows by Breed: Holstein v Jersey") +
  scale_x_discrete(name="Breed", breaks=NULL) +
  scale_y_continuous(name="Percent Butterfat",
                     limits=c(0,15), breaks=seq(1,15,1)) +
  theme(strip.text.x=element_text(face="bold", size=12,
                                  color="navyblue")) +
  theme(strip.background=element_rect(fill="wheat1")) +
  theme_MacYates()

gridExtra::grid.arrange(
  img_11a,
  img_11b,
  ncol=2, nrow=2,
  top = textGrob("Imagen 4: Edad, Número de Intentos Previos y Estancia Hospitalaria de los Pacientes con Intento de Suicidio \nHospital Susana López de Valencia 2019",
                 gp=gpar(fontsize=15,
                         font=1)))

par(ask=TRUE)
gridExtra::grid.arrange(
  BoxplotPctButterfatOverall,
  BoxplotPctButterfatBreed.recode, ncol=2)
