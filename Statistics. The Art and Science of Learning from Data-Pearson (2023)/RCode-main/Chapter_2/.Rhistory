# Create a vector 'die' representing a die's sides
die <- c(1, 2, 3, 4, 5, 6)
# Make a copy of 'die' named 'new.die'
new.die <- die
# Print the values of 'die' and 'new.die'
die
new.die
typeof(die)
load("~/Research/2023 - 07 - 09 - Intento de Suicidio HSLV 2019/.RData")
########################################################################
############################### HOUSEKEEPING ###########################
########################################################################
date() # Current system time and date.
R.version.string # R version and version release date.
options(digits=6) # Confirm default digits.
options(scipen=999)# Suppress scientific notation.
options(width=60) # Confirm output width.
ls() # List all objects in the working directory.
rm(list = ls()) # CAUTION: Remove all files in the
# working directory. If this
# action is not desired, use rm()
# one-by-one to remove the objects
# that are not needed.
ls.str() # List all objects with finite detail.
setwd("C:/Users/juand/iCloudDrive/Library\Using R for Biostatistics Springer (2021) - Thomas W. MacFarland, Jan M. Yates/Datasets/Chapter 2")
setwd("C:/Users/juand/iCloudDrive/Library\Using R for Biostatistics Springer (2021) - Thomas W. MacFarland, Jan M. Yates/Datasets/Chapter 2")
setwd("C:/Users/juand/iCloudDrive/Library/Using R for Biostatistics Springer (2021) - Thomas W. MacFarland, Jan M. Yates/Datasets/Chapter 2")
# Set to a new working directory.
# Note the single forward slash and double
# quotes.
# This new directory should be the directory
# where the data file is located, otherwise
# the data file will not be found.
getwd() # Confirm the working directory.
list.files() # List files at the PC directory.
.libPaths() # Library pathname.
.Library # Library pathname.
sessionInfo() # R version, locale, and packages.
search() # Attached packages and objects.
searchpaths() # Attached packages and objects.
# Use the utils::read.table() function to import the
# .csv file INtSUIDATASET.csv into the current R
# session and place the contents into the object
# dat.df, which is a dataframe that: (1) has a
# header row, (2) uses a period for decimals, and (3)
# uses a comma to separate one field from another.
#
# Note how the utils package is available as one of the
# packages immediately put into use when a R session is
# first started.
dat.df <- utils::read.table (file =
"CPIIISectionLbsGender.csv",
header=TRUE, dec=".", sep=",")
getwd() # Identify the working directory
ls() # List objects
attach(dat.df) # Attach the data, for later use
library(ggplot2)
# Weight (Lbs), Overall
QQLbs <-
ggplot2::ggplot(CPIIISecLbsGen.df,
aes(sample=Lbs)) +
stat_qq(color="red") +
stat_qq_line(color="blue", size=1.75) +
ggtitle("
Weight (Lbs) QQ-Plot and QQ-Line,\nOverall\n") +
labs(x = "\nTheoretical", y = "Weight (Lbs)\n") +
theme_bw()
# Use the utils::read.table() function to import the
# .csv file INtSUIDATASET.csv into the current R
# session and place the contents into the object
# dat.df, which is a dataframe that: (1) has a
# header row, (2) uses a period for decimals, and (3)
# uses a comma to separate one field from another.
#
# Note how the utils package is available as one of the
# packages immediately put into use when a R session is
# first started.
CPIIISectionLbsGender.df <- utils::read.table (file =
"CPIIISectionLbsGender.csv",
header=TRUE, dec=".", sep=",")
getwd() # Identify the working directory
ls() # List objects
attach(CPIIISectionLbsGender.df) # Attach the data, for later use
# Weight (Lbs), Overall
QQLbs <-
ggplot2::ggplot(CPIIISecLbsGen.df,
aes(sample=Lbs)) +
stat_qq(color="red") +
stat_qq_line(color="blue", size=1.75) +
ggtitle("
Weight (Lbs) QQ-Plot and QQ-Line,\nOverall\n") +
labs(x = "\nTheoretical", y = "Weight (Lbs)\n") +
theme_bw()
# Weight (Lbs), Overall
QQLbs <-
ggplot2::ggplot(dat.df,
aes(sample=Lbs)) +
stat_qq(color="red") +
stat_qq_line(color="blue", size=1.75) +
ggtitle("
Weight (Lbs) QQ-Plot and QQ-Line,\nOverall\n") +
labs(x = "\nTheoretical", y = "Weight (Lbs)\n") +
theme_bw()
# Weight (Lbs) by Section (two breakouts)
QQFacetLbsSection <-
ggplot2::ggplot(dat.df,
aes(sample=Lbs)) +
stat_qq(color="red") +
stat_qq_line(color="blue", size=1.75) +
facet_grid(. ~ Section) +
ggtitle("
Weight (Lbs) QQ-Plot and QQ-Line,\nby Course Section\n") +
labs(x = "\nTheoretical", y = "Weight (Lbs)\n") +
theme_bw()
# Weight (Lbs) by Gender (two breakouts)
QQFacetLbsGender <-
ggplot2::ggplot(dat.df,
aes(sample=Lbs)) +
stat_qq(color="red") +
stat_qq_line(color="blue", size=1.75) +
facet_grid(. ~ Gender) +
ggtitle("
Weight (Lbs) QQ-Plot and QQ-Line,\nby Gender\n") +
labs(x = "\nTheoretical", y = "Weight (Lbs)\n") +
theme_bw()
gridExtra::grid.arrange(
QQLbs,
QQFacetLbsSection,
QQFacetLbsGender, ncol=3)
########################################################################
############################### HOUSEKEEPING ###########################
########################################################################
date() # Current system time and date.
R.version.string # R version and version release date.
options(digits=6) # Confirm default digits.
options(scipen=999)# Suppress scientific notation.
options(width=60) # Confirm output width.
ls() # List all objects in the working directory.
rm(list = ls()) # CAUTION: Remove all files in the
# working directory. If this
# action is not desired, use rm()
# one-by-one to remove the objects
# that are not needed.
ls.str() # List all objects with finite detail.
getwd() # Identify the current working directory.
setwd("C:/Users/juand/iCloudDrive/Library/Statistics. The Art and Science of Learning from Data-Pearson (2023)/RCode-main/Chapter_2")
# Set to a new working directory.
# Note the single forward slash and double
# quotes.
# This new directory should be the directory
# where the data file is located, otherwise
# the data file will not be found.
getwd() # Confirm the working directory.
list.files() # List files at the PC directory.
.libPaths() # Library pathname.
.Library # Library pathname.
sessionInfo() # R version, locale, and packages.
search() # Attached packages and objects.
searchpaths() # Attached packages and objects.
# Use the utils::read.table() function to import the
# .csv file INtSUIDATASET.csv into the current R
# session and place the contents into the object
# dat.df, which is a dataframe that: (1) has a
# header row, (2) uses a period for decimals, and (3)
# uses a comma to separate one field from another.
#
# Note how the utils package is available as one of the
# packages immediately put into use when a R session is
# first started.
dat.df <- utils::read.table (file =
"Animals.csv",
header=TRUE, dec=".", sep=",")
getwd() # Identify the working directory
ls() # List objects
attach(dat.df) # Attach the data, for later use
str(dat.df) # Identify structure
head(dat.df, n=3) # Show the head, 1st 3 cases
View(dat.df)
hist(dat.df$gestation,
breaks=10, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,55), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,55)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
library(Hmisc)
describre(dat.df)
describre(dat.df$gestation)
sum(dat.df$gestation)
hist(dat.df$gestation,
breaks=NULL, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,55), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,55)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=1000, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,55), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,55)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(20,55), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,70), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,1000), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,800), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=10, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,5)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,7)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,8)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,20)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=10, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,20)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
hist(dat.df$gestation,
breaks=5, # Granularity of output
main="Edad Pacientes con  de Intentos de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,700), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,10)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
dat.df$gestation
par(ask=TRUE)
ggplot2::ggplot(dat.df, aes(x=gestation)) +
geom_bar(stat="count",
fill=c("red", "darkgreen")) +
ggtitle("Ejercicio") +
xlab("Gestación") +
ylab("No. de Animales") +
theme(plot.title=element_text(face="bold", size=14)) +
theme(axis.title.x=element_text(face="bold", size=14)) +
theme(axis.text.x=element_text(face="bold", size=14)) +
theme(axis.title.y=element_text(face="bold", size=14)) +
theme(axis.text.y=element_text(face="bold", size=14)) +
theme(axis.ticks.x=element_line(size=2)) +
theme(axis.ticks.y=element_line(size=2)) +
theme(axis.ticks.length=unit(0.5,"cm")) +
theme(panel.background=element_rect(fill="grey95"))
par(ask=TRUE)
ggplot2::ggplot(dat.df, aes(x=gestation)) +
geom_bar()
#ESTA TABLA RESUME CASI TODO
# Column 2 = Gender2
# Column 3 = RaceEthnic2
epiDisplay::tableStack(1:33,
dataFrame=dat.df,
by="none", count=TRUE, decimal=2,
percent=c("column", "row"))
#ESTA TABLA RESUME CASI TODO
# Column 2 = Gender2
# Column 3 = RaceEthnic2
epiDisplay::tableStack(1:3,
dataFrame=dat.df,
by="none", count=TRUE, decimal=2,
percent=c("column", "row"))
plot(density(dat.df$gestation, na.rm=TRUE),
main="Edad (Años) de los casos de Intentos de Suicidio
Hospital Susana López de Valencia, 2019",
col="red", lwd=5)
hist(dat.df$gestation, main="Edad (Años): Histogram")
hist(dat.df$gestation,
breaks=10, # Granularity of output
main="Edad (Años) Pacientes con Intento de Suicidio
Hospital Susana López de Valencia,
Popayán - Colombia, 2019.",
col="red", # Color(s)
xlab="Edad (Años)",
ylab="Número de pacientes",
font.axis=2, # Make the axis bold
font.lab=2, # Make the labels bold
cex.main=1, # Size - main (title)
cex.lab=1.25, # Size - labels
xlim=c(10,60), # Adjust X axis limits (LOOK AT MIN. - MAX. FOR THIS)
ylim=c(0,60)) # Adjust Y axis limits (LOOK AT FREQUENCY FOR THIS)
ggplot(dat.df(gestation),
aes(x = sodium, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(breaks = seq(0,360,40), closed = 'left', color = 'black', fill = 'tan') +
labs(x = 'Sodium (mg)', y = 'Percent (%)',
title = 'Distribution of Sodium Values in Cereals') +
scale_y_continuous(limit = c(0,32),
breaks = seq(0,30,5),
expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,360,40)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(data.frame(gestation),
aes(x = sodium, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(breaks = seq(0,360,40), closed = 'left', color = 'black', fill = 'tan') +
labs(x = 'Sodium (mg)', y = 'Percent (%)',
title = 'Distribution of Sodium Values in Cereals') +
scale_y_continuous(limit = c(0,32),
breaks = seq(0,30,5),
expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,360,40)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(data.frame(gestation),
aes(x = sodium, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(breaks = seq(0,360,40), closed = 'left', color = 'black', fill = 'tan') +
labs(x = "Sodium (mg)", y = 'Percent (%)',
title = "Distribution of Sodium Values in Cereals") +
scale_y_continuous(limit = c(0,32),
breaks = seq(0,30,5),
expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,360,40)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(data.frame(gestation),
aes(x = gestation, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(breaks = seq(0,360,40), closed = 'left', color = 'black', fill = 'tan') +
labs(x = "Sodium (mg)", y = 'Percent (%)',
title = "Distribution of Sodium Values in Cereals") +
scale_y_continuous(limit = c(0,32),
breaks = seq(0,30,5),
expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,360,40)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(gss, aes(x = gestation, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(center = 0, binwidth = 1, color = 'black', fill = 'orchid') +
labs(x = 'Hours of Watching TV', y = 'Percent (%)',
title = 'Histogram of the Numbers of Hours Watching TV per Day',
subtitle = 'Source: General Social Survey 2012') +
theme_bw() +
scale_y_continuous(limits = c(0,26), breaks = seq(0,25,5), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,25,1)) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
ggplot(dat.df, aes(x = gestation, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(center = 0, binwidth = 1, color = 'black', fill = 'orchid') +
labs(x = 'Hours of Watching TV', y = 'Percent (%)',
title = 'Histogram of the Numbers of Hours Watching TV per Day',
subtitle = 'Source: General Social Survey 2012') +
theme_bw() +
scale_y_continuous(limits = c(0,26), breaks = seq(0,25,5), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,25,1)) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
ggplot(dat.df, aes(x = gestation, y = 100 * (..count.. / sum(..count..)))) +
geom_histogram(center = 0, binwidth = 1, color = 'black', fill = 'orchid') +
labs(x = 'Hours of Watching TV', y = 'Percent (%)',
title = 'Histogram of the Numbers of Hours Watching TV per Day',
subtitle = 'Source: General Social Survey 2012') +
theme_bw() +
scale_y_continuous(limits = c(0,26), breaks = seq(0,25,5), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0,25,1)) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
####### EXPLORATION OF NUMERIC (dbl) DATA #######
glimpse(dat.df)
glimpse(dat.df) # Identify structure
####### 1ST VISUALIZATION OF DATA #######
library(Hmisc)
class(dat.df) # Class
glimpse(dat.df) # Identify structure
####### 1ST VISUALIZATION OF DATA #######
library(dplyr)
glimpse(dat.df) # Identify structure
